# https://boginw.github.io/js-y86-64/

.pos 0
irmovq 0x800,%rbp
irmovq 0x800,%rsp
irmovq $17,%rcx
pushq %rcx
irmovq $8,%rcx
pushq %rcx
irmovq $2,%rcx               # Example values.
pushq %rcx
irmovq $1,%rcx
pushq %rcx
irmovq $16,%rcx
pushq %rcx

main:
    irmovq $1, %r11
    
    sum:
        popq %rcx            # Pops next value from stack.
        andq %rcx, %rcx      
        je avg               # If value is 0, jumps to average.
        
        addq %rcx, %rbx      # Adds all values into one.
        addq %r11, %r8       # Increases dividend by 1.
        
        jmp sum              # Repeats process.
    
    avg:
        subq %r8, %rbx       # Subracts by dividend from sum.
        andq %rbx, %rbx      
        jle end              # If remainding value =< 0, ends process.
        
        addq %r11, %rax      # Adds 1 to result.
        
        jmp avg              # Repeats process.
            
    end:
        halt     

