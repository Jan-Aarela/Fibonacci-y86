# https://boginw.github.io/js-y86-64/

.pos 0
irmovq 0x800,%rbp
irmovq 0x800,%rsp
irmovq $76,%r11
pushq %r11
irmovq $85,%r11
pushq %r11
irmovq $46,%r11
pushq %r11
irmovq $61,%r11
pushq %r11
irmovq $5,%r11
pushq %r11
irmovq $85,%r11
pushq %r11
irmovq $52,%r11            # Example values.
pushq %r11
irmovq $88,%r11
pushq %r11
irmovq $50,%r11
pushq %r11
irmovq $28,%r11
pushq %r11
irmovq $35,%r11
pushq %r11
irmovq $32,%r11
pushq %r11
irmovq $17,%r11
pushq %r11
irmovq $70,%r11
pushq %r11
irmovq $49,%r11
pushq %r11

main:
    popq %r14                # Pops next value from an array.
    rrmovq %r14, %rsi        # Loads value to 
    rrmovq %r14, %rdi
    
    sorter:
        popq %r14             # Pops next value from an array.
        andq %r14, %r14        
        je end                # If value = 0, jumps to end.
        
        rrmovq %r14, %rdx     # Loads value to comparison registers.
        rrmovq %r14, %rbx
        
    smallest:
        subq %rsi, %rdx       # If value is larger than current smallest number,
        jg largest            # Jumps to "largest".
        rrmovq %r14, %rsi     # Sets new smallest number.
        jmp sorter            # Jumps back to sorter.
    
    largest:
        subq %rdi, %rbx        # If value is smaller than current largest number,
        jl sorter              # Jumps back to sorter.
        rrmovq %r14, %rdi      # Sets new larger number.
        jmp sorter             # Jumps back to sorter.
    
    end:
        halt                   
    
